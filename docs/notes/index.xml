<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Field Notes Robot Building on Mobile Robot I/O</title>
    <link>http://mobilerobot.io/notes/</link>
    <description>Recent content in Field Notes Robot Building on Mobile Robot I/O</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://mobilerobot.io/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Mobile Robot Project</title>
      <link>http://mobilerobot.io/notes/project/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/project/</guid>
      <description>&lt;p&gt;We want to build a self&lt;/p&gt;

&lt;p&gt;The Robot must be able to navigate while controlled by a human or
software, it must be modular, extensible and configurable.  Interested
in the project?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Arduino Interupts</title>
      <link>http://mobilerobot.io/notes/arduino-interupts/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/arduino-interupts/</guid>
      <description>Nick Gammon does a great job describing interupts on the Arduino, when and I why you might want to use them. As an overly summarized version, if you want to be able to get a notification when data has arrived without having to sleep and poll for data.
Talk about Ardiuno interupts, non-blocking I/O and Nearly Real Time OS. This is a very good, and very indepth article.
TODO: Add some code snippets as examples for running external engines.</description>
    </item>
    
    <item>
      <title>Arduino Nano</title>
      <link>http://mobilerobot.io/notes/arduino-nano/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/arduino-nano/</guid>
      <description>I flashed the onbaord LED and I made the RGB LED change colors. It is powered with a old style mini (small) USB adaptor.
I was able to connect the Arduino Nanos to the I2C bus created for internal communications.
Power can be brought in through a 5v Vin pin.</description>
    </item>
    
    <item>
      <title>Connecting a Raspberry PI and Arduino with I2C</title>
      <link>http://mobilerobot.io/notes/i2c-rpi-arduino/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/i2c-rpi-arduino/</guid>
      <description>When I first started tinkering with the Arduino, about mid 2018, (yea I know, I am waaaaay late to the game) It was so easy to find great tutorials, but that changed quickly once you start filling up the pins you need.
 The Whole is Greater than the sum of the parts
 References:  [Nick Gannon ~ Excellent and thourough](&amp;ldquo;http://www.gammon.com.au/i2c&amp;quot;) &amp;ldquo;http://dsscircuits.com/articles/effects-of-varying-i2c-pull-up-resistors&amp;quot; &amp;ldquo;https://oscarliang.com/raspberry-pi-arduino-connected-i2c/&amp;quot;  Macro and Micro Controllers One attractive thought is using the Raspberry PI and it&amp;rsquo;s full blown OS, programming and communication capabilities as the brains and transport.</description>
    </item>
    
    <item>
      <title>Tank and The Internets</title>
      <link>http://mobilerobot.io/notes/reboot/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/reboot/</guid>
      <description>&lt;p&gt;As Tank roams about, it will be gathering and transmitting data
according to the application, that data will be collected, by a
collector and sent to storage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OSEPP Tank Kit</title>
      <link>http://mobilerobot.io/notes/osepp-tank-kit/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/osepp-tank-kit/</guid>
      <description>TODO: Place some photos, and pointers to everything.</description>
    </item>
    
    <item>
      <title>Large Scale Video Delivery</title>
      <link>http://mobilerobot.io/notes/mcast-video-delivery/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/mcast-video-delivery/</guid>
      <description>&lt;p&gt;I lead a team at Cisco Systems to build a system that would deliver
streaming video to millions of users, simultaneously. That same
technology has been used by DIRECTV, TimeWarner Cable, AT&amp;amp;T and
other major&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TFTP Display with Adafruit 2.8 LCD</title>
      <link>http://mobilerobot.io/notes/rpi-adafruit-tftp-display/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/rpi-adafruit-tftp-display/</guid>
      <description>&lt;p&gt;The number #1 thing to make sure of is select the first option in the ADA TFT
function.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reconfigure the Raspberry Pi by Rebooting</title>
      <link>http://mobilerobot.io/notes/raspberry-pi-network-booting/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/raspberry-pi-network-booting/</guid>
      <description>Booting a Raspberry Pi from an SD card or USB stick is pretty neat and all, but they are inadequate for sustainded, reliable production use.
The quality of the SD comes into question immediately. Even the best of SD cards can go south out of nowhere! I do not know much about sd cards at all, except that I have blasted through about 12 of them this with 3 RPI&amp;rsquo;s (and a BeableBone), that is too expensive.</description>
    </item>
    
    <item>
      <title>Management This Website</title>
      <link>http://mobilerobot.io/notes/websites/</link>
      <pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/websites/</guid>
      <description>&lt;p&gt;Even what at first glance would seem to be the simplist of websites
will end up being a lot of work, if that site is to become
productive.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sensor Networks</title>
      <link>http://mobilerobot.io/notes/sensor-networks/</link>
      <pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/sensor-networks/</guid>
      <description> TODO: write ups  sierra hydrographics ACOE GOES software timeseries databases example sensor network around the house (throw in hardware)  </description>
    </item>
    
    <item>
      <title>DC Power, Batteries and Solar</title>
      <link>http://mobilerobot.io/notes/power/</link>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/power/</guid>
      <description>Different options for powering robots. Stationary, near electrical outlets is always the easiest, but does not bode well for mobile and autonomous.
Batteries are the key factor.
Make a list of my various power supplies.
Also make a link to the Youtube video that shows how to make a multi voltage power supply from an old PC power supply.</description>
    </item>
    
    <item>
      <title>Software Development</title>
      <link>http://mobilerobot.io/notes/software/</link>
      <pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/software/</guid>
      <description>This document will attempt to capture and define some Software best practices that we&amp;rsquo;ll practice during our software development process.
Zero Downtime Software Also, how can we manage the software on a live robot? This sounds like a job for industrial strength, distributed system with a friendly API. Is it possible?
Oh, it has to be all OpenSource. It is entirely acceptable, and preferable to use other well established Open Source products.</description>
    </item>
    
    <item>
      <title>Requirements ~ The Controller</title>
      <link>http://mobilerobot.io/notes/reqs-controller/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/reqs-controller/</guid>
      <description>The controller has two primary parts, the hardware and sofware elements. A good system design, like ours will separate the specific hardware and the controlling software.
Hardware Requirements  wireless ~ but which  The vehicle will be automous, hence it needs to be free of tethers, both electronics, controls and power.
 must be responsive, there should be no (minimized) percievable delay from  TODO: Determine HW Control type There are a number of choices to select for HW control, RFI seems to be a good candidate.</description>
    </item>
    
    <item>
      <title>Robotics and IoT</title>
      <link>http://mobilerobot.io/notes/robotics/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/robotics/</guid>
      <description>&lt;p&gt;The world is full of things that rely on software to work, from
sprinkler systems, to cars and jet airplanes, laptops, cell phones and
drones.  You name it everything. Now lets consider how we use it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Arduino vs Raspberry Pi</title>
      <link>http://mobilerobot.io/notes/rpi-vs-arduino/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/rpi-vs-arduino/</guid>
      <description>Limitations of Hardware The Arduino is the workhorse of the maker world, for very good reason, but I quickly realized I was running out of pins for all the things I wanted to attach to Arduino.
A motorshield on one Arduino, and a large number of sensors will overwhelm the hardware power of one of these devices. More important, the processing power can easily become overwhelmed with some of the smarts required for the driving algorightms and moving time-series data into the clowd.</description>
    </item>
    
    <item>
      <title>Chassis and Drive Train</title>
      <link>http://mobilerobot.io/notes/reqs-hw-chasis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/reqs-hw-chasis/</guid>
      <description>&lt;p&gt;The body and drive train of the Robot will determine if our project is
going to actually function in the real world.  It all starts with a
design in mind, choices of materials, the design of all functional
components, mobility, motion and durability of the project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mobile Robot Website</title>
      <link>http://mobilerobot.io/notes/mobile-robot-website/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/mobile-robot-website/</guid>
      <description>Talk about how ansible was used to update this website. Terraform to provision the virtual host, ansible to manage configurations.
NGINX and Static sites generated with Hugo</description>
    </item>
    
  </channel>
</rss>