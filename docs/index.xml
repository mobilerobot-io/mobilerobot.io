<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mobile Robot I/O Project on Mobile Robot I/O</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Mobile Robot I/O Project on Mobile Robot I/O</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MQTT For Controllor Communication</title>
      <link>http://localhost:1313/projects/mqtt-for-controller-communication/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/mqtt-for-controller-communication/</guid>
      <description>&lt;p&gt;The MQTT message server a general purpose as a systems message bus our
project components can use to read and write data in near realtime.
This data is used for a number of purposes, to advertise changes to
control inputs and sensors, publish control messages to motor
controllors and by the dashboard to display our realtime sensor
data. This describes how our MQTT bus is being used and how we got it
all hooked up!
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Go Periph Library</title>
      <link>http://localhost:1313/notes/go-periph-library/</link>
      <pubDate>Sun, 28 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/go-periph-library/</guid>
      <description>Periph provides a lot of useful utilitie along with example source code to help start developing our own interactions.</description>
    </item>
    
    <item>
      <title>Joystick Controls for Mobile Robot</title>
      <link>http://localhost:1313/projects/remote-joystick/</link>
      <pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/remote-joystick/</guid>
      <description>This was a simple but very cool project. Setup an Arduino Nano with a Joystick inputs with an RF output back to a control station (or the vehicle if control software resides on vehical).
Requirements Develop a wireless Remote Control capable of controlling (i.e. send inputs to control software) able to control the vehicles motion.
The Joystick must be able to communicate wirelessley.
 RF - required and PoC is complete Wifi optional and desired Blue Tooth optional and desired  Design Our first cut at the Joystick is very simple.</description>
    </item>
    
    <item>
      <title>The ESP32</title>
      <link>http://localhost:1313/notes/esp32/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/esp32/</guid>
      <description> You need to push the RESET button to get them to write flash.
A power packed chip that I have just started playing with. Give some quick specs here: and compare with other well known options (arduino&amp;rsquo;s, stm32 or Raspberry Pi.
Quick Feature Recap </description>
    </item>
    
    <item>
      <title>7inch Touch Screen by Element 14</title>
      <link>http://localhost:1313/inventory/rpi-7inch-touch-screen-element14/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/inventory/rpi-7inch-touch-screen-element14/</guid>
      <description>This 7 inch touch screen display attaches directly to a modern raspberry Pi (upto B+ 2017 module).
Todo: verify whether, or not this display can be attached to a Raspberry Pi Zero or not.</description>
    </item>
    
    <item>
      <title>Control Station Display</title>
      <link>http://localhost:1313/projects/control-station-display/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/control-station-display/</guid>
      <description>&lt;p&gt;We are going to build a simple control station that begins with a
Raspberry Pi and connected &lt;em&gt;7 inch touchscreen tablet&lt;/em&gt;.  I have it
setup in &amp;ldquo;kiosk mode&amp;rdquo;, which is basically full page chrome without the
tabs and tool bars etc.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mobile Robot Chassis</title>
      <link>http://localhost:1313/projects/rover-chassis/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/rover-chassis/</guid>
      <description>I quickly outgrew my first introductory robotics kit. I started with my first Robotic Kit (actually 4 of them), I choose the kits that provided the chassis only, after all, I did not know if I would want to base it on a Raspberry Pi or Arduino (or both), perhaps something else entirely? Follow the story and find out what happened:
Intro Robotic Kits All inclusive Bring Your own Electronics Open Source Software Choosing Your Controller(s) Raspberry Pi ~ Pros and Cons Arduino ~ Pros and Cons Motorsheilds Others Were Rubber Meets the Road 2, 4 or 6 wheels Track Systems Wheels in Track System Number of Motors 1, 2, 4 or 6 wheel drive?</description>
    </item>
    
    <item>
      <title>TLV the Type Length Vector Protocol</title>
      <link>http://localhost:1313/projects/tlv/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/tlv/</guid>
      <description>&lt;p&gt;TLV is a very simple communication protocol that can be used to send
messages around a complex, distributed system.&lt;br /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The NRF240L1 RF Transceiver</title>
      <link>http://localhost:1313/notes/nrf24l01/</link>
      <pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/notes/nrf24l01/</guid>
      <description>This RC reciever chip is very easy to use out of the box, yet provides some very sophisticated capabilities. The first project We&amp;rsquo;ll start using this chip will be a remote control Joystick for our mobile robot.
Todos:  point to the datasheet load personal photos of my project with NRF20L  pull the image from evernote  fritz a diagram post code that I use and or wrote Try to do an eagle cad  Source Voltage According to Benjamin David Fraser Plugging the NRF24L02 directly into the Arduino 3.</description>
    </item>
    
    <item>
      <title>Control Station App</title>
      <link>http://localhost:1313/projects/control-station-application/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/control-station-application/</guid>
      <description>Our control station will run a 7in touch panel attached to a Raspberry Pi with various periphereals attached. To this end, it is a simple, self contained webserver UI written Go.
Plugins keep it real Otto accepts plugins that allow new functionality to be added by simply implementing the simple interface specific in the interface specification.
Otto GUI Otto comes with a built in GUI (HTML) interface as well as a provide REST interface and MQTT message bus.</description>
    </item>
    
    <item>
      <title>PiCamera Flask Server</title>
      <link>http://localhost:1313/projects/pi-camera-flask-server/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/pi-camera-flask-server/</guid>
      <description>I have created a python / Flask based server to run on the Raspberry accepting REST calls to perform application specific functions.
I have created a flask server that will accept REST requests to control the PiCamera, AdaFruitMotorSheild and other stuff.
Refer to the PiCamera documentation here: https://picamera.readthedocs.io/en/release-1.13/.
The software can be found in github repository.
And how to write and operate a flask based server for your project.</description>
    </item>
    
    <item>
      <title>rip4</title>
      <link>http://localhost:1313/inventory/rpi4/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/inventory/rpi4/</guid>
      <description>This Raspberry Pi has the 7 inch touch display attached, it also acts as the base station for the robots.</description>
    </item>
    
    <item>
      <title>Using I2C for Inter Micro Controller Communication</title>
      <link>http://localhost:1313/projects/i2c-mcu-communications/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/i2c-mcu-communications/</guid>
      <description> I wanted to use an Arduino AND a smarter device, but did not want to waste the power, overhead and money to purchase an arduino ethernet shield. Rather we can use the I2C bus just fine, thank you very much!
Logical Level Converter between Arduino &amp;amp; Raspberry Pi Raspberry Pi Hardware &amp;amp; Schematics Software Arduino Hardware &amp;amp; Schematics Software Experiments </description>
    </item>
    
    <item>
      <title>Inexpensive Motor Controllers for Arduino and Raspberry Pi</title>
      <link>http://localhost:1313/projects/motor-controllers/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/motor-controllers/</guid>
      <description>What are the first things to consider when developing a mobile robot Is how you&amp;rsquo;re going to make it move, and that is typically using motors. The cool thing is that inexpensive electrical motors are plentiful, however putting them to good use is a bit complex, Here we will conquer some of that complexity.
We will consider the following 3 things:
 What type of motor(s) do we need? How are we going to power them?</description>
    </item>
    
    <item>
      <title>Otto the Micro Server</title>
      <link>http://localhost:1313/projects/otto-mico-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/otto-mico-server/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>