<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on Mobile Robot I/O</title>
    <link>http://mobilerobot.io/categories/software/</link>
    <description>Recent content in Software on Mobile Robot I/O</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://mobilerobot.io/categories/software/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MQTT For Controllor Communication</title>
      <link>http://mobilerobot.io/projects/mqtt-for-controller-communication/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/projects/mqtt-for-controller-communication/</guid>
      <description>&lt;p&gt;The MQTT message server a general purpose as a systems message bus our
project components can use to read and write data in near realtime.
This data is used for a number of purposes, to advertise changes to
control inputs and sensors, publish control messages to motor
controllors and by the dashboard to display our realtime sensor
data. This describes how our MQTT bus is being used and how we got it
all hooked up!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Go Periph Library</title>
      <link>http://mobilerobot.io/notes/go-periph-library/</link>
      <pubDate>Sun, 28 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/notes/go-periph-library/</guid>
      <description>Periph provides a lot of useful utilitie along with example source code to help start developing our own interactions.</description>
    </item>
    
    <item>
      <title>Control Station Display</title>
      <link>http://mobilerobot.io/projects/control-station-display/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/projects/control-station-display/</guid>
      <description>&lt;p&gt;We are going to build a simple control station that begins with a
Raspberry Pi and connected &lt;em&gt;7 inch touchscreen tablet&lt;/em&gt;.  I have it
setup in &amp;ldquo;kiosk mode&amp;rdquo;, which is basically full page chrome without the
tabs and tool bars etc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TLV the Type Length Vector Protocol</title>
      <link>http://mobilerobot.io/projects/tlv/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/projects/tlv/</guid>
      <description>&lt;p&gt;TLV is a very simple communication protocol that can be used to send
messages around a complex, distributed system.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PiCamera Flask Server</title>
      <link>http://mobilerobot.io/projects/pi-camera-flask-server/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://mobilerobot.io/projects/pi-camera-flask-server/</guid>
      <description>I have created a python / Flask based server to run on the Raspberry accepting REST calls to perform application specific functions.
I have created a flask server that will accept REST requests to control the PiCamera, AdaFruitMotorSheild and other stuff.
Refer to the PiCamera documentation here: https://picamera.readthedocs.io/en/release-1.13/.
The software can be found in github repository.
And how to write and operate a flask based server for your project.</description>
    </item>
    
  </channel>
</rss>